/**
 * –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ production
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç: —Ä–µ–∞–ª—å–Ω—ã–π Bot API, –∞–¥–º–∏–Ω –∞–Ω–∞–ª–∏—Ç–∏–∫—É, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–≤
 */

const BASE_URL = 'https://plinko-game-9hku.onrender.com';

async function testFullLaunch() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã...\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å...');
    const adminResponse = await fetch(`${BASE_URL}/admin`);
    console.log(`   –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: ${adminResponse.status === 200 ? '‚úÖ' : '‚ùå'} (${adminResponse.status})`);
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
    const statsResponse = await fetch(`${BASE_URL}/api/admin/stats`);
    if (statsResponse.ok) {
      const stats = await statsResponse.json();
      console.log('   ‚úÖ –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:');
      console.log(`      - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.totalUsers}`);
      console.log(`      - Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${stats.telegramUsers}`);
      console.log(`      - –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏: ${stats.connectedWallets}`);
      console.log(`      - –û–±—ä–µ–º Stars: ${stats.totalStarsVolume}`);
    } else {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${statsResponse.status}`);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersResponse = await fetch(`${BASE_URL}/api/admin/analytics/users`);
    if (usersResponse.ok) {
      const users = await usersResponse.json();
      console.log(`   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
      
      const telegramUsers = users.filter(u => u.telegram_id);
      console.log(`   üì± –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å Telegram ID: ${telegramUsers.length}`);
      
      if (telegramUsers.length > 0) {
        const user = telegramUsers[0];
        console.log(`   üë§ –ü—Ä–∏–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`);
        console.log(`      - ID: ${user.id}`);
        console.log(`      - Telegram ID: ${user.telegram_id}`);
        console.log(`      - –ë–∞–ª–∞–Ω—Å: ${user.balance}`);
        console.log(`      - Stars –±–∞–ª–∞–Ω—Å: ${user.stars_balance || 0}`);
      }
    } else {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResponse.status}`);
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∫–æ—à–µ–ª—å–∫–æ–≤
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∫–æ—à–µ–ª—å–∫–æ–≤...');
    const walletsResponse = await fetch(`${BASE_URL}/api/admin/analytics/wallets`);
    if (walletsResponse.ok) {
      const wallets = await walletsResponse.json();
      console.log(`   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–æ—à–µ–ª—å–∫–æ–≤: ${wallets.length}`);
      
      const connectedWallets = wallets.filter(w => w.is_connected);
      console.log(`   üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏: ${connectedWallets.length}`);
      
      if (wallets.length > 0) {
        const wallet = wallets[0];
        console.log(`   üí≥ –ü—Ä–∏–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞:`);
        console.log(`      - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${wallet.user_id}`);
        console.log(`      - –ê–¥—Ä–µ—Å: ${wallet.wallet_address.slice(0, 10)}...`);
        console.log(`      - –°—Ç–∞—Ç—É—Å: ${wallet.is_connected ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–û—Ç–∫–ª—é—á–µ–Ω'}`);
      }
    } else {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–æ–≤: ${walletsResponse.status}`);
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...');
    const starsResponse = await fetch(`${BASE_URL}/api/admin/analytics/stars`);
    if (starsResponse.ok) {
      const transactions = await starsResponse.json();
      console.log(`   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${transactions.length}`);
      
      const completedTx = transactions.filter(t => t.status === 'completed');
      console.log(`   ‚≠ê –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${completedTx.length}`);
      
      if (transactions.length > 0) {
        const tx = transactions[0];
        console.log(`   üí´ –ü–æ—Å–ª–µ–¥–Ω—è—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:`);
        console.log(`      - ID: ${tx.id}`);
        console.log(`      - Telegram ID: ${tx.telegram_id}`);
        console.log(`      - –°—É–º–º–∞: ${tx.amount} Stars`);
        console.log(`      - –°—Ç–∞—Ç—É—Å: ${tx.status}`);
      }
    } else {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${starsResponse.status}`);
    }
    
    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ Stars invoice
    console.log('\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π Bot API (Stars invoice)...');
    const invoiceResponse = await fetch(`${BASE_URL}/api/payments/stars/initiate`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        telegram_id: 123456789,  // –¢–µ—Å—Ç–æ–≤—ã–π ID
        amount: 1,  // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞
        description: '–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ Bot API'
      })
    });
    
    if (invoiceResponse.ok) {
      const invoiceData = await invoiceResponse.json();
      console.log('   ‚úÖ –†–µ–∞–ª—å–Ω—ã–π Bot API —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      console.log(`      - Payload: ${invoiceData.payload}`);
      console.log(`      - Invoice link: ${invoiceData.invoice_link}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ä–µ–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞, –∞ –Ω–µ mock
      const invoiceLink = invoiceData.invoice_link || '';
      if (invoiceLink.includes('api.telegram.org')) {
        console.log('   üéâ Bot API —Å–æ–∑–¥–∞–µ—Ç –†–ï–ê–õ–¨–ù–´–ï invoice!');
      } else if (invoiceLink.includes('testbot')) {
        console.log('   ‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback mock invoice');
      } else {
        console.log('   ‚ö†Ô∏è  Invoice link –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
      }
    } else {
      const error = await invoiceResponse.json();
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è invoice: ${error.error}`);
    }
    
    // 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–≥—Ä–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\n7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...');
    const gameStatsResponse = await fetch(`${BASE_URL}/api/admin/game-stats`);
    if (gameStatsResponse.ok) {
      const gameData = await gameStatsResponse.json();
      console.log('   ‚úÖ –ò–≥—Ä–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:');
      console.log(`      - –í—Å–µ–≥–æ –∏–≥—Ä: ${gameData.stats.totalGames}`);
      console.log(`      - –û–±—â–∏–µ —Å—Ç–∞–≤–∫–∏: ${gameData.stats.totalBets}`);
      console.log(`      - –û–±—â–∏–µ –≤—ã–ø–ª–∞—Ç—ã: ${gameData.stats.totalPayouts}`);
      console.log(`      - –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –∫–∞–∑–∏–Ω–æ: ${gameData.stats.houseEdge.toFixed(2)}%`);
      console.log(`      - –ü–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–≥—Ä: ${gameData.recentGames.length}`);
    } else {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${gameStatsResponse.status}`);
    }
    
    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞');
    console.log('‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ');
    console.log('‚úÖ Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è');
    console.log('‚úÖ –†–µ–∞–ª—å–Ω—ã–π Bot API –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω');
    console.log('‚úÖ –ò–≥—Ä–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞');
    console.log('\nüöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ü–û–õ–ù–û–ú–£ –ó–ê–ü–£–°–ö–£!');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testFullLaunch();