/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –∫–æ—à–µ–ª—å–∫–∞
 */

const BASE_URL = 'https://plinko-game-9hku.onrender.com';

async function testWalletTracking() {
  console.log('üí≥ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞...\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersResponse = await fetch(`${BASE_URL}/api/admin/analytics/users`);
    if (usersResponse.ok) {
      const users = await usersResponse.json();
      console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
      
      if (users.length > 0) {
        const testUser = users[0];
        console.log(`   üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ID ${testUser.id}`);
        
        // –ü—Ä–æ–±—É–µ–º –æ—Ç—Å–ª–µ–¥–∏—Ç—å –∫–æ—à–µ–ª–µ–∫
        console.log('\n2Ô∏è‚É£ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞...');
        const walletResponse = await fetch(`${BASE_URL}/api/wallet/track-connection`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            user_id: testUser.id,
            wallet_address: 'UQTestWallet123AdminDemo456Analytics789'
          })
        });
        
        if (walletResponse.ok) {
          console.log('   ‚úÖ –ö–æ—à–µ–ª–µ–∫ —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–ª–µ–∂–µ–Ω!');
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∫–æ—à–µ–ª—å–∫–æ–≤
          console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∫–æ—à–µ–ª—å–∫–æ–≤...');
          const analyticsResponse = await fetch(`${BASE_URL}/api/admin/analytics/wallets`);
          if (analyticsResponse.ok) {
            const wallets = await analyticsResponse.json();
            console.log(`   ‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–æ—à–µ–ª—å–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–π–¥–µ–Ω–æ: ${wallets.length}`);
            
            if (wallets.length > 0) {
              const wallet = wallets[0];
              console.log(`   üí≥ –ü—Ä–∏–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞:`);
              console.log(`      - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${wallet.user_id}`);
              console.log(`      - –ê–¥—Ä–µ—Å: ${wallet.wallet_address}`);
              console.log(`      - –°—Ç–∞—Ç—É—Å: ${wallet.is_connected ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–û—Ç–∫–ª—é—á–µ–Ω'}`);
            }
          } else {
            console.log(`   ‚ùå –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–æ—à–µ–ª—å–∫–æ–≤: ${analyticsResponse.status}`);
          }
          
        } else {
          const error = await walletResponse.json();
          console.log(`   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: ${error.error}`);
        }
        
        // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        console.log('\n4Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é...');
        if (testUser.telegram_id) {
          const starsResponse = await fetch(`${BASE_URL}/api/payments/stars/initiate`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              telegram_id: parseInt(testUser.telegram_id),
              amount: 10,
              description: '–¢–µ—Å—Ç –∞–¥–º–∏–Ω –∞–Ω–∞–ª–∏—Ç–∏–∫–∏'
            })
          });
          
          if (starsResponse.ok) {
            const starsData = await starsResponse.json();
            console.log(`   ‚úÖ Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${starsData.payload}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É Stars
            console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É Stars...');
            const starsAnalyticsResponse = await fetch(`${BASE_URL}/api/admin/analytics/stars`);
            if (starsAnalyticsResponse.ok) {
              const transactions = await starsAnalyticsResponse.json();
              console.log(`   ‚úÖ Stars –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ù–∞–π–¥–µ–Ω–æ: ${transactions.length}`);
            } else {
              console.log(`   ‚ùå Stars –∞–Ω–∞–ª–∏—Ç–∏–∫–∞: ${starsAnalyticsResponse.status}`);
            }
          } else {
            console.log('   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏');
          }
        }
      }
    } else {
      console.log('   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    }
    
    console.log('\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testWalletTracking();