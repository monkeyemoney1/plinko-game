/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü –∏ –¥–∞–Ω–Ω—ã—Ö –≤ production
 */

const BASE_URL = 'https://plinko-game-9hku.onrender.com';

async function initializeDatabase() {
  console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ production...\n');
  
  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  try {
    console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const userResponse = await fetch(`${BASE_URL}/api/users`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        username: 'test_user_admin',
        wallet_address: 'UQTest123AdminWallet456Demo789',
        telegram_id: '987654321'
      })
    });
    
    if (userResponse.ok) {
      const user = await userResponse.json();
      console.log(`   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ID ${user.user_id}`);
      
      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
      console.log('\n2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é...');
      const starsResponse = await fetch(`${BASE_URL}/api/payments/stars/initiate`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          telegram_id: 987654321,
          amount: 5,
          description: '–¢–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ'
        })
      });
      
      if (starsResponse.ok) {
        const starsData = await starsResponse.json();
        console.log(`   ‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${starsData.payload}`);
      }
      
    } else {
      const error = await userResponse.json();
      console.log(`   ‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞: ${error.error}`);
    }
    
  } catch (error) {
    console.log('   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error.message);
  }
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã...');
  
  const endpoints = [
    { name: '–ê–¥–º–∏–Ω —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', url: '/api/admin/stats' },
    { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', url: '/api/admin/analytics/users' },
    { name: '–ö–æ—à–µ–ª—å–∫–∏', url: '/api/admin/analytics/wallets' },
    { name: 'Stars —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏', url: '/api/admin/analytics/stars' },
    { name: '–ò–≥—Ä–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', url: '/api/admin/game-stats' },
    { name: '–í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏', url: '/api/admin/transactions' }
  ];
  
  for (const endpoint of endpoints) {
    try {
      const response = await fetch(`${BASE_URL}${endpoint.url}`);
      if (response.ok) {
        const data = await response.json();
        const count = Array.isArray(data) ? data.length : (data.stats ? 'OK' : 'OK');
        console.log(`   ‚úÖ ${endpoint.name}: ${count}`);
      } else {
        console.log(`   ‚ùå ${endpoint.name}: HTTP ${response.status}`);
      }
    } catch (error) {
      console.log(`   ‚ùå ${endpoint.name}: ${error.message}`);
    }
  }
  
  console.log('\nüéØ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!');
  console.log('\nüìä –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É:');
  console.log('üîó https://plinko-game-9hku.onrender.com/admin');
  console.log('\nüìà –†–∞–∑–¥–µ–ª—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:');
  console.log('üë• https://plinko-game-9hku.onrender.com/admin/analytics');
  console.log('üóÑÔ∏è https://plinko-game-9hku.onrender.com/admin/db');
  console.log('üí≥ https://plinko-game-9hku.onrender.com/admin/transactions');
  console.log('üé≤ https://plinko-game-9hku.onrender.com/admin/games');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
initializeDatabase();